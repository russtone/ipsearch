package ipsearch_test

import (
	"fmt"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/russtone/ipsearch"
)

func TestFind(t *testing.T) {
	tests := []struct {
		s   string
		res []string
	}{
		// IPv4
		{
			".123",
			[]string{},
		},
		{
			"---192.168.---",
			[]string{},
		},
		{
			"---192.168.1",
			[]string{},
		},
		{
			"---192.355.1.1--",
			[]string{},
		},
		{
			"---.155.1.1--",
			[]string{},
		},
		{
			"---192.168.1.1---",
			[]string{
				"192.168.1.1",
			},
		},
		{
			"---492.168.1.1---",
			[]string{
				"92.168.1.1",
			},
		},
		{
			"---192.168.1.354---",
			[]string{
				"192.168.1.35",
			},
		},
		{
			"---192.168.1.192.168.1.1---",
			[]string{
				"192.168.1.192",
			},
		},
		{
			"---192.168.1.256.168.1.1---",
			[]string{
				"192.168.1.25",
				"6.168.1.1",
			},
		},

		// IPv6
		{
			"::1",
			[]string{"::1"},
		},
		{
			"---1:2:3:4:5:6:ffff:192.168..1---",
			[]string{},
		},
		{
			"---1:2:fffff::4---",
			[]string{
				"ffff::4",
			},
		},
		{
			"---A:B::C:D---",
			[]string{
				"A:B::C:D",
			},
		},
		{
			"---::---",
			[]string{
				"::",
			},
		},
		{
			"---1::2:3:4---",
			[]string{
				"1::2:3:4",
			},
		},
		{
			"---::2:3:4---",
			[]string{
				"::2:3:4",
			},
		},
		{
			"---1::1:---",
			[]string{
				"1::1",
			},
		},
		{
			"---1::1",
			[]string{
				"1::1",
			},
		},
		{
			"---1::1::1---",
			[]string{
				"1::1",
				"::1",
			},
		},
		{
			"---1::",
			[]string{
				"1::",
			},
		},
		{
			"---1:2:3:4:5::6:7:8",
			[]string{
				"1:2:3:4:5::6:7",
			},
		},
		{
			"---1:2:3:4:5:6:7::8",
			[]string{
				"1:2:3:4:5:6:7::",
			},
		},
		{
			"---1:2:3:4:5:6:7::",
			[]string{
				"1:2:3:4:5:6:7::",
			},
		},
		{
			"---::ffff:192.168.1.1---",
			[]string{
				"::ffff:192.168.1.1",
			},
		},
		{
			"---:ffff:192.168.1.1---",
			[]string{
				"192.168.1.1",
			},
		},
		{
			"---1:2:3:4:5:6:7:ffff:192.168.1.1---",
			[]string{
				"1:2:3:4:5:6:7:ffff",
				"192.168.1.1",
			},
		},
		{
			"---1:2:3:4:5:6::ffff:192.168.1.1---",
			[]string{
				"1:2:3:4:5:6::ffff",
				"192.168.1.1",
			},
		},
		{
			"---1:2:3:4:5:6:ffff:192.168.1.1---",
			[]string{
				"2:3:4:5:6:ffff:192.168.1.1",
			},
		},
	}

	for i, tt := range tests {
		t.Run(fmt.Sprintf("%d/%s", i, tt.s), func(t *testing.T) {
			assert.Equal(t, tt.res, ipsearch.Find(tt.s))
		})
	}
}
